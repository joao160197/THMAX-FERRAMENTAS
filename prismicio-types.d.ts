// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

/**
 * Content for Catalog documents
 */
interface CatalogDocumentData {
  /**
   * 123 field in *Catalog*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: catalog.123
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  "123": prismic.ImageField<never>;

  /**
   * ABC field in *Catalog*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: catalog.abc
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  abc: prismic.KeyTextField;

  /**
   * DEF field in *Catalog*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: catalog.def
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  def: prismic.RichTextField;
}

/**
 * Catalog document from Prismic
 *
 * - **API ID**: `catalog`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type CatalogDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<CatalogDocumentData>,
    "catalog",
    Lang
  >;

export type AllDocumentTypes = CatalogDocument;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type { CatalogDocument, CatalogDocumentData, AllDocumentTypes };
  }
}
